import 'package:flutter/material.dart';
import 'package:tabakroom_staff/themes/theme_data.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});

  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  bool _isPasswordVisible = false; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –ø–∞—Ä–æ–ª—è
  bool get _isDarkMode {
    return Theme.of(context).brightness == Brightness.dark;
  }

  final TextEditingController _loginController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  bool _isLoading = false; // üëâ –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  Future<void> _login() async {
    setState(() {
      _isLoading = true; // üëâ –í–∫–ª—é—á–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
    });

    await Future.delayed(const Duration(seconds: 2)); // ‚è≥ –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞

    setState(() {
      _isLoading = false; // ‚ùå –í—ã–∫–ª—é—á–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
    });

    // üü¢ –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(
          "–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!",
          style: Theme.of(context).textTheme.headlineLarge,
        ),
        backgroundColor:
            _isDarkMode ? AppColors.secondaryForDark : AppColors.secondary,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              // üî• –õ–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              Padding(
                padding: const EdgeInsets.only(top: 40.0, bottom: 20.0),
                child: Image.asset(
                  'assets/images/splash_image.png',
                  height: 150,
                ),
              ),

              const SizedBox(height: 20),

              // üìã –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
              TextField(
                controller: _loginController,
                decoration: InputDecoration(
                  labelText: '–õ–æ–≥–∏–Ω',
                  prefixIcon: const Icon(Icons.person),
                  contentPadding: const EdgeInsets.symmetric(
                      vertical: 20), // –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É
                ),
              ),
              const SizedBox(height: 15),

              // üìã –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è
              TextField(
                controller: _passwordController,
                obscureText: !_isPasswordVisible, // –°–∫—Ä—ã—Ç–∏–µ –ø–∞—Ä–æ–ª—è
                decoration: InputDecoration(
                  labelText: '–ü–∞—Ä–æ–ª—å',
                  prefixIcon: const Icon(Icons.lock),
                  contentPadding: const EdgeInsets.symmetric(
                      vertical: 20), // –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É
                  // üëÅ –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –ø–∞—Ä–æ–ª—è
                  suffixIcon: IconButton(
                    icon: Icon(
                      _isPasswordVisible
                          ? Icons.visibility
                          : Icons.visibility_off,
                      color: AppColors.backgroundLight,
                    ),
                    onPressed: () {
                      setState(() {
                        _isPasswordVisible = !_isPasswordVisible;
                      });
                    },
                  ),
                ),
              ),
              const SizedBox(height: 30),

              // üîò –ö–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏"
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: _isDarkMode
                        ? AppColors.orangeForDark
                        : AppColors.orange,
                    padding: const EdgeInsets.symmetric(vertical: 15),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  onPressed: _isLoading
                      ? null // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –∏–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∞
                      : _login, // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –ª–æ–≥–∏–Ω–∞
                  child: _isLoading
                      ? const SizedBox(
                          width: 24,
                          height: 24,
                          child: CircularProgressIndicator(
                            color: Colors.white,
                            strokeWidth: 2,
                          ),
                        )
                      : Text(
                          '–í–æ–π—Ç–∏',
                          style: Theme.of(context).textTheme.headlineLarge,
                        ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
