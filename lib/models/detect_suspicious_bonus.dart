import 'package:tabakroom_staff/models/bonus_transactions.dart';
import 'package:tabakroom_staff/models/counterparty.dart';

class DetectSuspiciousBonus {
  final int id;
  final Counterparty user;
  final DateTime detectedAt;
  final bool isResolved;
  final int? reviewedBy; // –ú–æ–∂–µ—Ç –±—ã—Ç—å null
  final DateTime? resolvedAt; // –ú–æ–∂–µ—Ç –±—ã—Ç—å null
  final List<BonusTransaction> transactions;

  DetectSuspiciousBonus({
    required this.id,
    required this.user,
    required this.detectedAt,
    required this.isResolved,
    this.reviewedBy,
    this.resolvedAt,
    required this.transactions,
  });

  // –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –∏–∑ JSON
  factory DetectSuspiciousBonus.fromJson(Map<String, dynamic> json) {
    return DetectSuspiciousBonus(
      id: json['id'],
      user: Counterparty.fromJson(json['user']),
      detectedAt: DateTime.parse(json['detected_at']),
      isResolved: json['is_resolved'],
      reviewedBy: json['reviewed_by'],
      resolvedAt: json['resolved_at'] != null
          ? DateTime.parse(json['resolved_at'])
          : null,
      transactions: (json['transactions'] as List)
          .map((txn) => BonusTransaction.fromJson(txn))
          .toList(),
    );
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ JSON
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'user': user,
      'detected_at': detectedAt.toIso8601String(),
      'is_resolved': isResolved,
      'reviewed_by': reviewedBy,
      'resolved_at': resolvedAt?.toIso8601String(),
      'transactions': transactions.map((txn) => txn.toJson()).toList(),
    };
  }
}

class FilterOptions {
  bool? isResolved; // –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –ª–∏
  FilterOptions({
    this.isResolved,
  });

  // üì¶ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ SharedPreferences)
  factory FilterOptions.fromJson(Map<String, dynamic> json) {
    return FilterOptions(
      isResolved: json['is_resolved'],
    );
  }

  // üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON (–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
  Map<String, dynamic> toJson() {
    return {
      if (isResolved != null) 'is_resolved': isResolved,
    };
  }

  // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—É—Å—Ç–æ–π –ª–∏ —Ñ–∏–ª—å—Ç—Ä
  bool get isEmpty => isResolved == null;

  // üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  void update({bool? isResolved}) {
    if (isResolved != null) this.isResolved = isResolved;
  }
}
