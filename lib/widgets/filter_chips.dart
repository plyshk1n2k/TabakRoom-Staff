import 'package:flutter/material.dart';

class FilterChips extends StatefulWidget {
  final List<dynamic> options; // ‚úÖ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–∞–∫ List<String>, —Ç–∞–∫ –∏ List<Map>
  final Function(dynamic)
      onSelected; // ‚úÖ Callback –ø—Ä–∏ –≤—ã–±–æ—Ä–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
  final dynamic selectedOption; // ‚úÖ –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç

  const FilterChips({
    super.key,
    required this.options,
    required this.onSelected,
    this.selectedOption,
  });

  @override
  _FilterChipsState createState() => _FilterChipsState();
}

class _FilterChipsState extends State<FilterChips> {
  dynamic _currentSelection;

  @override
  void initState() {
    super.initState();
    _currentSelection = widget.selectedOption;
  }

  @override
  Widget build(BuildContext context) {
    final isDarkMode = Theme.of(context).brightness == Brightness.dark;
    return Wrap(
      spacing: 8.0,
      runSpacing: 4.0,
      children: widget.options.map((option) {
        final String optionLabel = option is Map<String, dynamic>
            ? option['label']
            : option.toString();

        final dynamic optionValue =
            option is Map<String, dynamic> ? option['id'] : option;

        return ChoiceChip(
          label: Text(
            optionLabel,
            style: TextStyle(
              color: _currentSelection == optionValue
                  ? Colors.white
                  : isDarkMode
                      ? Colors.white70
                      : Colors.black87,
              fontWeight: FontWeight.w500,
            ),
          ),
          selected: _currentSelection == optionValue,
          onSelected: (bool selected) {
            setState(() {
              if (_currentSelection == optionValue) {
                _currentSelection =
                    null; // –°–Ω—è—Ç—å –≤—ã–±–æ—Ä, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω
              } else {
                _currentSelection = optionValue; // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤—ã–±–æ—Ä
              }
            });
            widget.onSelected(_currentSelection);
          },
        );
      }).toList(),
    );
  }
}

// üì¶ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// 1Ô∏è‚É£ –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
// FilterChips(
//   options: [
//     {'id': 1, 'label': '–°–∫–ª–∞–¥ 1'},
//     {'id': 2, 'label': '–°–∫–ª–∞–¥ 2'},
//     {'id': 3, 'label': '–°–∫–ª–∞–¥ 3'},
//   ],
//   onSelected: (value) {
//     print('–í—ã–±—Ä–∞–Ω —Ñ–∏–ª—å—Ç—Ä —Å id: \$value');
//   },
// )

// 2Ô∏è‚É£ –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
// FilterChips(
//   options: ['–ü–∞—Ä–∞–º–µ—Ç—Ä 1', '–ü–∞—Ä–∞–º–µ—Ç—Ä 2', '–ü–∞—Ä–∞–º–µ—Ç—Ä 3'],
//   onSelected: (value) {
//     print('–í—ã–±—Ä–∞–Ω —Ñ–∏–ª—å—Ç—Ä: \$value');
//   },
// )
